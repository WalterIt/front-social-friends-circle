1 - Clone Laradock inside your PHP project:

git clone https://github.com/Laradock/laradock.git

2 - Enter the laradock folder and rename env-example to .env.

cp env-example .env

3 - Run your containers:

docker-compose up -d nginx mysql phpmyadmin workspace 

4 - Open your projectï¿½s .env file and set the following:

DB_HOST=mysql
REDIS_HOST=redis
QUEUE_HOST=beanstalkd

phpadmin solution: https://github.com/laradock/laradock/issues/1694
 My dicision: sudo docker stop $(sudo docker ps -a -q) 
sudo docker rm $(sudo docker ps -a -q) 
sudo rm -rf ~/.laradock/data 
changed latest on 5.7 version in .env MYSQL_VERSION 
docker-compose up -d nginx mysql phpmyadmin 

login in PhpMyAdmin: 
server: mysql 
login: root 
password: root

5 - Open your browser and visit localhost: http://localhost.


6 - docker-compose exec workspace bash

7 - root@75681c5b178a:/var/www# composer create-project laravel/laravel back-friends

8 - CHANGE laradock .env :
# Point to the path of your applications code on your host
APP_CODE_PATH_HOST=../back-friends

9 - 8 - CHANGE back-friends .env :
DB_CONNECTION=mysql
DB_HOST=mysql

10 - docker-compose stop

11 - docker-compose up -d nginx mysql phpmyadmin

12 - tested laravel app

13 - change laradock .env :
DOCKER_HOST_IP=10.0.75.1

DOCKER_HOST_IP=192.168.99.100

14 - configure  programe files/system32/drivers/etc/   host file

192.168.99.100  laradock

15 - CONFIGURE XDEBUG .env 

PHP_FPM_INSTALL_XDEBUG=true
also workspace  xdebug=true

16 CONFIGURE XDEBUG.INI workspace and php-fm

xdebug.remote_autostart=1
xdebug.remote_enable=1

17 - docker-compose down

18 - docker-compose up -d nginx mysql phpmyadmin

19 - install extension php xdebug  in VSCODE and in browser xdebug helper

20 - in VSCODE configure xdebug launch.json (NOW WORKING!)

before:
    {
      "name": "Listen for XDebug",
      "type": "php",
      "request": "launch",
      "port": 9000

    },

after:
    {
      "name": "Listen for XDebug",
      "type": "php",
      "request": "launch",
      "port": 9000,
      "pathMappings": {
        "/var/www": "${workspaceRoot}/back-friends"
        }
    },


21 - in back-friends route/ web.php
before:
Route::get('/', function () {

    return view('welcome');
});

after:
Route::get('/', function () {
    $a = 5;
    $b = 4;
    $c = $a + $b;
    echo $c;
    return view('welcome');
});

22 - in web.php create a break point


23 - INSTALLING ANGULAR


24 - FRONTFRIENDS: Creating Register Page 


30 - BACK-FRIENDS - APIs CREATION
 - go to root :
docker-compose exec workspace bash

31 Install JWTAUTH PACKAGE

composer require tymon/jwt-auth:dev-develop --prefer-source

32 - Follow the instructions: https://blog.pusher.com/laravel-jwt/

root@a4cbe8ba1e4f:/var/www# php artisan jwt:secret
jwt-auth secret [1qXyuOqVK1MY5dN4nP0hkhD02mdAbGHv] set successfully.

33 - in app/http/    kernel.php add:
    protected $routeMiddleware = [
		.......
        'jwt.auth' => 'Tymon\JWTAuth\Middleware\GetUserFromToken',
        'jwt.refresh' => 'Tymon\JWTAuth\Middleware\RefreshToken',
    ];

 34 - in routes/  api.php create register route

Route::post('/register', 'AuthController@register');

35 - create authcontroler in root:

docker-compose exec workspace bash

root@a4cbe8ba1e4f:/var/www#    php artisan make:controller AuthController

36 - clear routes in web.php in routes/

36 - Add register method in AuthController

37 - in root run :

before: in back-friends  set db_name, users, etc

php artisan migrate

docker-compose up -d nginx mysql phpmyadmin

38 - In AuthController import:



39 - Create register function

    public function register(Request $request)
    {
        $rules = [
            'firstName' => 'required',
            'email' => 'unique:users|required',
            'password' => 'required'
        ];
        $input = $request->only('firstName', 'email', 'password');
        
        $validator = Validator::make($input, $rules);
        if($validator->fails()) {
            return response()->json(['success'=> false, 'error'=> $validator->messages()]);
        }

        $firstName = $request->firstName;
        $lastName = $request->lastName;
        $email = $request->email;
        $password = $request->password;

        $user = User::create([
            'firstName' => $firstName,
            'lastName' => $lastName,
            'email' => $email,
            'password' => Hash::make($password)
        ]);
        
        return response()->json(['success' => true]);
    }

40 - Test api in POSTMAN

41 - Made in User.php  / Migrations users_table


    public function up()
    {
        Schema::create('users', function (Blueprint $table) {
            $table->increments('id');
            $table->string('firstName');
            $table->string('lastName');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });
    }

42 - rerun migration in root:

php artisan migrate:rollback

this erase all the data

php artisan migrate

43 - Install laravel-cors library in the root:

composer require barryvdh/laravel-cors:

https://packagist.org/packages/barryvdh/laravel-cors

44 - Add in Kernel.php   http/

     * The application's global HTTP middleware stack.
     *
     * These middleware are run during every request to your application.
     *
     * @var array
     */
    protected $middleware = [
            ------------ Add code bellow -- 
        \Barryvdh\Cors\HandleCors::class,
    ];

45 - Configuration

The defaults are set in config/cors.php. Copy this file to your own config directory to modify the values. You can publish the config using this command:

$ php artisan vendor:publish --provider="Barryvdh\Cors\ServiceProvider"


46 - CREATING LOGIN PAGE

47 - CREATING SOCIAL-FEED

48 - Authentication




implements JWTSubject

use Tymon\JWTAuth\Contracts\JWTSubject;



49 - Some Important changes in User.php  app/


use Tymon\JWTAuth\Contracts\JWTSubject;  <<== Added 

class User extends Authenticatable !!! implements JWTSubject!!

    /**   Get the identifier that will be stored in the subject claim of the JWT
     * @return mixed
     */
    public function getJWTIdentifier()
    {
        return $this->getKey();
    }
    /**
     * Return a key value array, containing any custom claims to be added to the JWT.
     * @return array
     */

     public function getJWTCustomClaims()
     {
         return [];
     }

50 - In Auth.php  config/
before:
    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],

after:
    'defaults' => [
        'guard' => 'api',
        'passwords' => 'users',
    ],


51 -  Authentication guard
before
    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],

        'api' => [
            'driver' => 'token',
            'provider' => 'users',
        ],
    ],

    after:
        'guards' => [

        'api' => [
            'driver' => 'jwt',
            'provider' => 'users',
        ],
    ],

52 - Rebuild api.php  routes/

new:
Route::group([
    'middleware' => 'api',
    'prefix'     =>  'auth'
], function() {
Route::post('/register', 'AuthController@register');
Route::post('/login', 'AuthController@login');
});

53 - Changing handling from unauthorized person in Hanlder.php app/Exceptions

add:
use Illuminate\Auth\AuthenticationException;


add
    /**
     * Convert an authentication exception into a response.
     *
     * @param  \Illuminate\Http\Request  $request
     * @param  \Illuminate\Auth\AuthenticationException  $exception
     * @return \Illuminate\Http\Response
     */
    protected function unauthenticated($request, AuthenticationException $exception)
    {
        return $request->expectsJson()
                    ? response()->json(['message' => $exception->getMessage()], 401)
                    : redirect()->guest($exception->redirectTo() ?? route('login'));
    }
 

!!! LOST DATA FROM DATABASE !! ==> set a path in .env  laradock/
DATA_PATH_HOST=../back-friends/data

5558

 docker-compose up -d nginx mysql phpmyadmin

 docker-compose exec workspace bash

 Users/wshir/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/laradock



#########################################################################

#phpadmin solution: https://github.com/laradock/laradock/issues/1694
 My dicision: sudo docker stop $(sudo docker ps -a -q) 
sudo docker rm $(sudo docker ps -a -q) 
sudo rm -rf ~/.laradock/data 
changed latest on 5.7 version in .env MYSQL_VERSION 
docker-compose up -d nginx mysql phpmyadmin 

########################################################################

PUSHING BRANCH TO github:

git push --set-upstream origin front/register

git push --set-upstream origin front/feed

git merge front/feed

############################################################################

NEXT  COMMIT ADD CORRECTED CODE IN:

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (dev)
$ git commit -m'Updated code in login.component.ts/social-feed.component.html/social-feed.component.ts'

##############################################################################

 git push --set-upstream origin authentication


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/laradock (master)
$ docker-compose exec workspace bash
root@588944be3429:/var/www# php artisan make:model Post -m
Model created successfully.
Created Migration: 2018_10_26_192119_create_posts_table



54 - ADDING RELATIONSHIP TO USER.PHP

55 - CREATING CONTROLLER AND MODEL AT THE SAME TIME:
root@588944be3429:/var/www# 
php artisan make:controller PostController --resource --model=Post
Controller created successfully.

55 -
root@588944be3429:/var/www# php artisan migrate
Migrating: 2018_10_26_192119_create_posts_table
Migrated:  2018_10_26_192119_create_posts_table

56 - 
root@588944be3429:/var/www# php artisan migrate:rollback
Rolling back: 2018_10_26_192119_create_posts_table
Rolled back:  2018_10_26_192119_create_posts_table

root@588944be3429:/var/www# php artisan migrate
Migrating: 2018_10_26_192119_create_posts_table
Migrated:  2018_10_26_192119_create_posts_table

#################################################################

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends/src/app/shared/services (service-network)
$ ng g service network --flat

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (service-network)
$ git commit -m'Implemented service-network in social-feed component'

$ git push --set-upstream origin service-network

  git merge service-network

##############################################################

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git merge post

$ git checkout -b user

root@588944be3429:/var/www# php artisan make:controller UserController --resource --model=User
Controller created successfully.

Route::apiResource('users', 'UserController');

root@588944be3429:/var/www# php artisan route:list

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git commit -m'Api User finished successfully'

        new file:   app/Http/Controllers/UserController.php
        modified:   routes/api.php

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git push --set-upstream origin user

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git merge user

###########################################:###########################################33

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (dev)
$ git checkout -b single-post


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (single-post)
$ ng add moment

Installed packages for tooling via npm.
Package "moment" was found but does not support schematics.
Error: Package "moment" was found but does not support schematics.


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (single-post)$
 npm install angular-moment moment --save

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (single-post)
$ git commit -m'Single-post Branch finished successfully |Added  Moment Package/DEV_NOTES.1.txt'


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (single-post)
$ git push --set-upstream origin single-post

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (dev)
$ git merge single-post

#############################################################################

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git commit -m'Added DBs'

$ git push

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git merge user

#############################################################################
1h 17 min
ALLOW TO GET ALL USER IN OUR APP:

UserController:

    public function index()
    {
        return response()->json(User::all());
    }

RELATIONSHIP  MANY TO MANY OF FRIENDS IN USER MODEL: (SEE USER MODEL)

Create Table to the RELATIONSHIP:

Modified _create_users_table

root@588944be3429:/var/www# php artisan migrate:reset
Migration not found: 2018_10_26_192119_create_posts_table
Rolling back: 2014_10_12_100000_create_password_resets_table
Rolled back:  2014_10_12_100000_create_password_resets_table
Rolling back: 2014_10_12_000000_create_users_table
Rolled back:  2014_10_12_000000_create_users_table

root@588944be3429:/var/www# php artisan migrate
Migrating: 2014_10_12_000000_create_users_table
Migrated:  2014_10_12_000000_create_users_table
Migrating: 2014_10_12_100000_create_password_resets_table
Migrated:  2014_10_12_100000_create_password_resets_table


TEST APPI  IN POSTMAN
Adding friends to our RELATIONSHIP
http://192.168.99.100/api/users/2/add_friend


wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git commit -m'Updated DB design | Created Users-Friends Route | Made New Migration | Created Relationship Users-Friends'
 
$ git push

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git merge user

#####################################################################################################

CREATION OF USER-FRIENDS COMPONENT

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/front-friends (dev)
$ git checkout -b users-friends
Switched to a new branch 'users-friends'



######################################################################33333

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (user)
$ git commit -m'Updated  app/User.php'

$ git push

wshir@DESKTOP-MTMVSEK MINGW64 ~/Documents/DOCKERPROJECTS/LARADOCKS_PROJECTS/back-friends (dev)
$ git merge user